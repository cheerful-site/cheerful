name: github-actions-ci/cd

on: 
  push:
    branches: [deploy_sojeong, deploy_mikyung, deploy_jongbo]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ 
        github.ref_name == 'deploy_sojeong' && secrets.DOCKER_USERNAME_SOJEONG ||
        github.ref_name == 'deploy_mikyung' && secrets.DOCKER_USERNAME_MIKYUNG ||
        github.ref_name == 'deploy_jongbo' && secrets.DOCKER_USERNAME_JONGBO
        }}
      DOCKER_PASSWORD: ${{ 
        github.ref_name == 'deploy_sojeong' && secrets.DOCKER_PASSWORD_SOJEONG ||
        github.ref_name == 'deploy_mikyung' && secrets.DOCKER_PASSWORD_MIKYUNG ||
        github.ref_name == 'deploy_jongbo' && secrets.DOCKER_PASSWORD_JONGBO
        }}
      APPLICATION_SECRET: ${{ 
        github.ref_name == 'deploy_sojeong' && secrets.APPLICATION_SECRET_SOJEONG ||
        github.ref_name == 'deploy_mikyung' && secrets.APPLICATION_SECRET_MIKYUNG ||
        github.ref_name == 'deploy_jongbo' && secrets.APPLICATION_SECRET_JONGBO
        }}
      REACT_ENV: ${{ 
        github.ref_name == 'deploy_sojeong' && secrets.REACT_ENV_SOJEONG ||
        github.ref_name == 'deploy_mikyung' && secrets.REACT_ENV_MIKYUNG ||
        github.ref_name == 'deploy_jongbo' && secrets.REACT_ENV_JONGBO
        }}
      BUILD_MODE: ${{
        github.ref_name == 'deploy_sojoeng' && 'sojeong' ||
        github.ref_name == 'deploy_mikyung' && 'mikyung' ||
        github.ref_name == 'deploy_jongbo' && 'jongbo'
        }}
    steps: 
      - name: checkout
        uses: actions/checkout@v5.0.0
        with:
          ref: ${{ github.ref }}

      - name: docker login
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: install JDK 21
        uses: actions/setup-java@v5.0.0
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: build spring boot app
        run: |
          cd cheerful_back
          echo ${{ env.APPLICATION_SECRET }} | base64 --decode > ./src/main/resources/application-secret.yml
          chmod 777 ./mvnw
          ./mvnw clean package -DskipTests
          docker build -t ${{ env.DOCKER_USERNAME }}/spring-app:latest .
          docker push ${{ env.DOCKER_USERNAME }}/spring-app:latest

      - name: build react app
        run: |
          cd cheerful_front
          echo ${{ env.REACT_ENV }} | base64 --decode > ./.env
          ls -a
          cat .env
          docker build --build-arg SERVERNAME=${{ env.BUILD_MODE }} -t ${{ env.DOCKER_USERNAME }}/react-app:latest .
          docker push ${{ env.DOCKER_USERNAME }}/react-app:latest

         
