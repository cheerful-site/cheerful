<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.korit.cheerful_back.domain.foodComment.FoodCommentMapper">
  <resultMap id="CommentMap" type="com.korit.cheerful_back.domain.foodComment.FoodComment">
    <id property="foodCommentId" column="food_comment_id" />
    <result property="foodId" column="food_id" />
    <result property="userId" column="user_id" />
    <result property="content" column="content" />
    <result property="createdAt" column="created_at" />
    <result property="isLike" column="is_like" />
    <result property="likeCount" column="like_count" />
    <association property="user" resultMap="UserMap" />
    <association property="foodCommentImgs" resultMap="FoodCommentImgMap" />
  </resultMap>

  <resultMap id="UserMap" type="com.korit.cheerful_back.domain.user.User">
    <id property="userId" column="user_id" />
    <result property="username" column="username" />
    <result property="password" column="password" />
    <result property="name" column="name" />
    <result property="email" column="email" />
    <result property="profileImgPath" column="profile_img_path" />
    <result property="role" column="role" />
    <result property="provider" column="provider" />
    <result property="providerId" column="provider_id" />
    <result property="createdAt" column="created_at" />
  </resultMap>

  <resultMap id="FoodCommentImgMap" type="com.korit.cheerful_back.domain.foodCommentImg.FoodCommentImg">
    <id property="foodCommentImgId" column="food_comment_img_id" />
    <result property="foodCommentId" column="food_comment_id" />
    <result property="seq" column="seq" />
    <result property="imgPath" column="img_path" />
  </resultMap>

  <insert id="insert">
    insert into food_comment_tb
    values (default, #{foodId}, #{userId}, #{content}, now())
  </insert>

  <select id="findAllByFoodId" resultMap="CommentMap">
    select
      fct.food_comment_id,
      fct.food_id,
      fct.user_id,
      fct.content,
      fct.created_at

      ut.user_id as ut_user_id,
      ut.username,
      ut.password,
      ut.name,
      ut.email,
      ut.profile_img_path,
      ut.role,
      ut.provider,
      ut.provider_id,
      ut.created_at as ut_created_at,

      fcit.food_comment_img_id,
      fcit.food_comment_id as fcit_food_comment_id,
      fcit.seq,
      fcit.`img_path`,

      ifnull(fclt.food_comment_like_id, 0) as is_like,
      ifnull(fclc.like_count, 0) as like_count
    from
      food_comment_tb fct
      left outer join user_tb ut on(ut.user_id = fct.user_id)
      left outer join food_comment_img_tb fcit on(fcit.food_comment_id = fct.food_comment_id)
      left outer join food_comment_like_tb fclt on(fclt.food_comment_id = fct.food_comment_id)
      left outer join (select food_comment_id, count(*) as like_count from food_comment_like_tb group by food_comment_id) fclc on(clc.food_comment_id = fct.food_comment_id)
    order by
      like_count desc,
      fct.food_comment_id desc
  </select>

  <select id="getCountByCommentId" resultType="java.lang.Integer">
    select
      count(*)
    from food_comment_tb
    where food_id = #{food_id}
  </select>
</mapper>